group 'com.lion.demo.provider'
description '服务提供者demo'

apply plugin: 'org.springframework.boot'
apply plugin: "com.bmuschko.docker-spring-boot-application"

dependencies {
    implementation project(':lion-common')

    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'

    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel'

    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-seata'

    implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'

    // 使用 Skywalking 时，依赖 spring-cloud-starter-sleuth 即可
    //implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    // 使用 Zipkin 时，依赖 spring-cloud-starter-zipkin 即可
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'

    //implementation 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'

    runtimeOnly 'mysql:mysql-connector-java'
    implementation "com.alibaba:druid-spring-boot-starter:${druidVersion}"
    implementation "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}"
    implementation "com.baomidou:mybatis-plus-generator:${mybatisPlusVersion}"
    implementation "org.apache.velocity:velocity-engine-core:${velocityEngineVersion}"

    implementation "com.github.pagehelper:pagehelper-spring-boot-starter:${pagehelperSpringVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.boot:spring-boot-starter-cache'

    implementation "com.github.xiaoymin:knife4j-spring-boot-starter:${knife4jVersion}"
}

docker {
    //如果url不指定的话
    //Unix默认: url = unix:///var/run/docker.sock
    //Windows默认: url = tcp://127.0.0.1:2375
    registryCredentials {
        url = 'https://index.docker.io/v1/'
        username = 'lion'
        password = 'lion'
        email = 'micyo202@163.com'
    }
    springBootApplication {
        maintainer = 'Yanzheng https://github.com/micyo202'
        baseImage = 'openjdk:11.0.6'
        ports = [8601]
        images = ["micyo202/${project.name}:${version}"]
        jvmArgs = ['-Dspring.profiles.active=$env', '-Djava.security.egd=file:/dev/./urandom', '-Xmx512m']
    }
}